# name: Create a new Raccoon table
# key: rdb-newtable
# expand-env: ((yas/indent-line nil))
# --

.. _${1:schema}.${2:tablename}:

=========${1:$(make-string (string-width yas-text) ?\=)}=${2:$(make-string (string-width yas-text) ?\=)}=
 Tabella $1.$2
=========${1:$(make-string (string-width yas-text) ?\=)}=${2:$(make-string (string-width yas-text) ?\=)}=

La tabella \`\`$1.$2\`\` contiene...


Campi
=====

.. _$1.$2.id:

**id**: :term:\`uuid_t (dominio)\`
  ID univoco del record e chiave primaria della tabella, impostato
  automaticamente a un \`\`UUID\`\` versione 1 da un trigger quando non
  viene specificato all'inserimento (solo su PostgreSQL).

.. _$1.$2.created:

**created**: :term:\`timestamp_t (dominio)\`
  Istante di creazione del record, impostato automaticamente da un
  trigger se non viene specificato all'inserimento (solo su
  PostgreSQL).

.. _$1.$2.changed:

**changed**: :term:\`timestamp_t (dominio)\`
  Istante di ultima modifica al record, impostato automaticamente da
  un trigger se non viene specificato all'inserimento (solo su
  PostgreSQL).

  Se \`\`NULL\`\` indica che il record non Ã¨ stato modificato dopo la creazione.

rdb-newfield


PostgreSQL
==========

Tabella
-------

.. index::
   pair: $1.$2 (tabella); Tabella (PostgreSQL)

.. patchdb:script:: Crea tabella $1.$2 (PostgreSQL)
   :description: Creazione della tabella \`\`$1.$2\`\`
   :revision: 1
   :language: sql
   :mimetype: text/x-postgresql
   :conditions: postgres
   :depends: Crea schema $1,
             Crea tabella public.TimeStamped
   :file: postgresql/$2.sql

Gestione timestamp
------------------

.. patchdb:script:: Inserimento record $1.$2
   :description: Inizializza i campi \`id\` e \`created\` se sono \`\`NULL\`\`
                 all'inserimento del record
   :language: sql
   :mimetype: text/x-postgresql
   :conditions: postgres
   :depends: Crea tabella $1.$2 (PostgreSQL),
             Funzione public.init_timestamp()

   create trigger trg_ins_ts_$1_$2
     before insert
     on $1.$2
     for each row execute procedure public.init_timestamp();

.. patchdb:script:: Aggiornamento timestamp $1.$2
   :description: Aggiorna il campo \`changed\` ad ogni modifica del record
   :language: sql
   :mimetype: text/x-postgresql
   :conditions: postgres
   :depends: Crea tabella $1.$2 (PostgreSQL),
             Funzione public.update_timestamp()

   create trigger trg_upd_ts_$1_$2
     before update
     on $1.$2
     for each row execute procedure public.update_timestamp();

Indici
------

rdb-newindex

Chiavi esterne
--------------

rdb-newfk
